services:
  cowrie:
    image: cowrie/cowrie:latest
    container_name: cowrie
    ports:
      - "2022:2222"  # SSH nach auÃŸen
    volumes:
      - ./cowrie.cfg:/cowrie/cowrie-git/etc/cowrie.cfg:ro
      - ./cowrie/log:/cowrie/cowrie-git/var/log/cowrie
    networks: [honeynet]
    restart: unless-stopped

  pcap-capture:
    image: nicolaka/netshoot:latest
    container_name: pcap-capture
    # Sniff im Bridge-Netz (gleiche Bridge wie cowrie & extractor)
    # -> tcpdump sieht Verbindungen auf Container-Port 2222
    command: >
      sh -lc '
        mkdir -p /data/pcap &&
        tcpdump -i eth0 -U -w /data/pcap/ssh-$(date +%Y%m%d-%H%M%S).pcap
          tcp port 2222 -G 30 -W 100 -nn -q
      '
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./data/pcap:/data/pcap
    networks: [honeynet]
    restart: unless-stopped

  extractor:
    build:
      context: ./extractor
    container_name: extractor
    environment:
      # SEND_URL absichtlich NICHT gesetzt -> kein Senden im Dauerlauf
      API_KEY: ${API_KEY}
      COWRIE_JSON: /cowrie/log/cowrie.json
      PCAP_DIR: /data/pcap
      OUT_DIR: /data/out
      SENSOR_ID: honeypot-01
    volumes:
      - ./extractor/extractor.py:/opt/extractor/extractor.py:ro
      - ./extractor/trigger.py:/app/trigger.py:ro
      - ./data/pcap:/data/pcap:ro
      - ./data/out:/data/out
      - ./cowrie/log:/cowrie/log:ro
    depends_on:
      - cowrie
      - pcap-capture
    networks: [honeynet]
    restart: unless-stopped
    # Default-CMD kommt aus extractor/entrypoint.sh (Loop, nur schreiben)

  session-trigger:
    build:
      context: ./extractor
    container_name: session-trigger
    environment:
      API_KEY: ${API_KEY}
      COWRIE_JSON: /cowrie/log/cowrie.json
      PCAP_DIR: /data/pcap
      OUT_DIR: /data/out
      SENSOR_ID: honeypot-01
      COLLECTOR_URL: http://host.docker.internal:8000/add_attack   # uploader
      SEND_URL: http://host.docker.internal:8000/add_attack 
      EXTRACTOR_BIN: "python /opt/extractor/extractor.py"
      USE_TSHARK: "0"                               # auf "1", wenn Image mit tshark gebaut
    command: ["python", "/app/trigger.py"]
    volumes:
      - ./extractor/extractor.py:/opt/extractor/extractor.py:ro
      - ./extractor/entrypoint.sh:/app/entrypoint.sh:ro
      - ./data/pcap:/data/pcap:ro
      - ./data/out:/data/out
      - ./cowrie/log:/cowrie/log:ro
    depends_on:
      - cowrie
      - pcap-capture
    networks: [honeynet]
    restart: unless-stopped

  uploader:
    build:
      context: ./uploader
    container_name: uploader
    environment:
      API_KEY: ${API_KEY}
      COLLECTOR_URL: http://host.docker.internal:8000/add_attack   # uploader
      SEND_URL: http://host.docker.internal:8000/add_attack 
      COWRIE_JSON: /cowrie/log/cowrie.json
    volumes:
      - ./cowrie/log:/cowrie/log:ro
    depends_on:
      - cowrie
    networks: [honeynet]
    restart: unless-stopped

networks:
  honeynet:
    driver: bridge
